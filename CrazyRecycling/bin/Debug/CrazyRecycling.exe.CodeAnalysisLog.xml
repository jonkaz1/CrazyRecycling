<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="c:\program files (x86)\microsoft visual studio\2017\community\team tools\static analysis tools\fxcop\Xml\CodeAnalysisReport.xsl"?>
<FxCopReport Version="15.0">
 <Targets>
  <Target Name="D:\New folder\CrazyRecycling\CrazyRecycling\bin\Debug\CrazyRecycling.exe">
   <Modules>
    <Module Name="crazyrecycling.exe">
     <Messages>
      <Message TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="NonBreaking">
       <Issue Name="NoStrongName" Certainty="95" Level="CriticalError">Sign 'CrazyRecycling.exe' with a strong name key.</Issue>
      </Message>
      <Message TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="NonBreaking">
       <Issue Certainty="95" Level="Error">Mark 'CrazyRecycling.exe' with CLSCompliant(true) because it exposes externally visible types.</Issue>
      </Message>
      <Message TypeName="MarkAssembliesWithNeutralResourcesLanguage" Category="Microsoft.Performance" CheckId="CA1824" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="NonBreaking">
       <Issue Certainty="95" Level="Warning">Because assembly 'CrazyRecycling.exe' contains a ResX-based resource file, mark it with the NeutralResourcesLanguage attribute, specifying the language of the resources within the assembly. This could improve lookup performance the first time a resource is retrieved.</Issue>
      </Message>
     </Messages>
     <Namespaces>
      <Namespace Name="CrazyRecycling">
       <Types>
        <Type Name="Facade" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#IsPlayerTooFar(System.Int32,System.Int32,System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="D:\New folder\CrazyRecycling\CrazyRecycling\Controllers" File="Facade.cs" Line="86">The 'this' parameter (or 'Me' in Visual Basic) of 'Facade.IsPlayerTooFar(int, int, int, int)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#machineController" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Facade.machineController' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Form1" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#BottleTypeIntToString(System.Int32)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="D:\New folder\CrazyRecycling\CrazyRecycling" File="Form1.cs" Line="267">The 'this' parameter (or 'Me' in Visual Basic) of 'Form1.BottleTypeIntToString(int)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Dispose(System.Boolean)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="_cancelationTokenSourceBottles" TypeName="DisposableFieldsShouldBeDisposed" Category="Microsoft.Usage" CheckId="CA2213" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="D:\New folder\CrazyRecycling\CrazyRecycling" File="Form1.Designer.cs" Line="15">'Form1' contains field 'Form1._cancelationTokenSourceBottles' that is of IDisposable type: 'CancellationTokenSource'. Change the Dispose method on 'Form1' to call Dispose or Close on this field.</Issue>
            </Message>
            <Message Id="_cancelationTokenSourcePlayers" TypeName="DisposableFieldsShouldBeDisposed" Category="Microsoft.Usage" CheckId="CA2213" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="D:\New folder\CrazyRecycling\CrazyRecycling" File="Form1.Designer.cs" Line="15">'Form1' contains field 'Form1._cancelationTokenSourcePlayers' that is of IDisposable type: 'CancellationTokenSource'. Change the Dispose method on 'Form1' to call Dispose or Close on this field.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Form1_Load(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="D:\New folder\CrazyRecycling\CrazyRecycling" File="Form1.cs" Line="60">In method 'Form1.Form1_Load(object, EventArgs)', call System.IDisposable.Dispose on object 'new Task(new Action(this, Form1_Load), this._cancelationTokenSourceBottles.Token, TaskCreationOptions.LongRunning)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="D:\New folder\CrazyRecycling\CrazyRecycling" File="Form1.cs" Line="59">In method 'Form1.Form1_Load(object, EventArgs)', call System.IDisposable.Dispose on object 'new Task(new Action(this, Form1_Load), this._cancelationTokenSourcePlayers.Token, TaskCreationOptions.LongRunning)' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\New folder\CrazyRecycling\CrazyRecycling" File="Form1.Designer.cs" Line="61">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Crazy Recycling".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PlayerName" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Form1.PlayerName' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Timer1_tick(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="D:\New folder\CrazyRecycling\CrazyRecycling" File="Form1.cs" Line="231">In method 'Form1.Timer1_tick(object, EventArgs)', object 'new PictureBox()' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'new PictureBox()' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="GameStart" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Button2_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="D:\New folder\CrazyRecycling\CrazyRecycling" File="GameStart.cs" Line="32">In method 'GameStart.Button2_Click(object, EventArgs)', call System.IDisposable.Dispose on object 'highscores' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\New folder\CrazyRecycling\CrazyRecycling" File="GameStart.Designer.cs" Line="57">Method 'GameStart.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Choose your name:".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\New folder\CrazyRecycling\CrazyRecycling" File="GameStart.Designer.cs" Line="103">Method 'GameStart.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Crazy Recycling".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\New folder\CrazyRecycling\CrazyRecycling" File="GameStart.Designer.cs" Line="86">Method 'GameStart.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Highscores".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\New folder\CrazyRecycling\CrazyRecycling" File="GameStart.Designer.cs" Line="75">Method 'GameStart.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Start game!".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\New folder\CrazyRecycling\CrazyRecycling" File="GameStart.Designer.cs" Line="47">Method 'GameStart.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Welcome to Crazy Recycling!".</Issue>
            </Message>
            <Message Id="Highscores" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\New folder\CrazyRecycling\CrazyRecycling" File="GameStart.Designer.cs" Line="86">Correct the spelling of the unrecognized token 'Highscores' in the literal '"Highscores"'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Highscores" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Highscores" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Highscores' in type name 'Highscores'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\New folder\CrazyRecycling\CrazyRecycling" File="Highscores.Designer.cs" Line="43">Method 'Highscores.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "All time Highscores!".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\New folder\CrazyRecycling\CrazyRecycling" File="Highscores.Designer.cs" Line="54">Method 'Highscores.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Highscores".</Issue>
            </Message>
            <Message Id="Highscores" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\New folder\CrazyRecycling\CrazyRecycling" File="Highscores.Designer.cs" Line="43">Correct the spelling of the unrecognized token 'Highscores' in the literal '"All time Highscores!"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="D:\New folder\CrazyRecycling\CrazyRecycling" File="Highscores.Designer.cs" Line="54">Correct the spelling of the unrecognized token 'Highscores' in the literal '"Highscores"'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="CrazyRecycling.Controllers">
       <Types>
        <Type Name="LeaderboardController" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#leaderboard" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'LeaderboardController.leaderboard' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MachineController" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Machines" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'MachineController.Machines' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;Machine&gt;' in 'MachineController.Machines' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PopulateListAsRecyclingMachines(System.Collections.Generic.List`1&lt;System.Drawing.Point&gt;,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="D:\New folder\CrazyRecycling\CrazyRecycling\Controllers\FacadeControllers" File="MachineController.cs" Line="28">Change 'List&lt;Point&gt;' in 'MachineController.PopulateListAsRecyclingMachines(List&lt;Point&gt;, int)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="IMG" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\New folder\CrazyRecycling\CrazyRecycling\Controllers\FacadeControllers" File="MachineController.cs" Line="28">In member 'MachineController.PopulateListAsRecyclingMachines(List&lt;Point&gt;, int)', correct the casing of 'IMG' in parameter name 'IMG' by changing it to 'img'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\New folder\CrazyRecycling\CrazyRecycling\Controllers\FacadeControllers" File="MachineController.cs" Line="31">In externally visible method 'MachineController.PopulateListAsRecyclingMachines(List&lt;Point&gt;, int)', validate parameter 'locations' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PopulateListAsShops(System.Collections.Generic.List`1&lt;System.Drawing.Point&gt;,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="D:\New folder\CrazyRecycling\CrazyRecycling\Controllers\FacadeControllers" File="MachineController.cs" Line="16">Change 'List&lt;Point&gt;' in 'MachineController.PopulateListAsShops(List&lt;Point&gt;, int)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="IMG" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\New folder\CrazyRecycling\CrazyRecycling\Controllers\FacadeControllers" File="MachineController.cs" Line="16">In member 'MachineController.PopulateListAsShops(List&lt;Point&gt;, int)', correct the casing of 'IMG' in parameter name 'IMG' by changing it to 'img'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\New folder\CrazyRecycling\CrazyRecycling\Controllers\FacadeControllers" File="MachineController.cs" Line="19">In externally visible method 'MachineController.PopulateListAsShops(List&lt;Point&gt;, int)', validate parameter 'locations' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MoveCommand" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\New folder\CrazyRecycling\CrazyRecycling\Controllers\FacadeControllers" File="MoveCommand.cs" Line="16">In externally visible method 'MoveCommand.MoveCommand(string)', validate parameter 'newLocation' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ChangeInnerValue(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\New folder\CrazyRecycling\CrazyRecycling\Controllers\FacadeControllers" File="MoveCommand.cs" Line="27">In externally visible method 'MoveCommand.ChangeInnerValue(string)', validate parameter 'value' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="PlayerCommand" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="AbstractTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1012" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="NonBreaking">
           <Issue Certainty="95" Level="CriticalWarning">Change the accessibility of all public constructors in 'PlayerCommand' to protected.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#serverConnector" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'PlayerCommand.serverConnector' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="PlayerController" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="TypesThatOwnDisposableFieldsShouldBeDisposable" Category="Microsoft.Design" CheckId="CA1001" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="DependsOnFix">
           <Issue Name="DependsOnFix" Certainty="95" Level="CriticalError">Implement IDisposable on 'PlayerController' because it creates members of the following IDisposable types: 'CancellationTokenSource'. If 'PlayerController' has previously shipped, adding new members that implement IDisposable to this type is considered a breaking change to existing consumers.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(CrazyRecycling.Models.Player)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="D:\New folder\CrazyRecycling\CrazyRecycling\Controllers\FacadeControllers" File="PlayerController.cs" Line="23">In method 'PlayerController.PlayerController(Player)', call System.IDisposable.Dispose on object 'new Task(new Action(this, PlayerController), this._cancelationTokenSource.Token, TaskCreationOptions.LongRunning)' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\New folder\CrazyRecycling\CrazyRecycling\Controllers\FacadeControllers" File="PlayerController.cs" Line="21">In externally visible method 'PlayerController.PlayerController(Player)', validate parameter 'player' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ChangeCharacterClass()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="D:\New folder\CrazyRecycling\CrazyRecycling\Controllers\FacadeControllers" File="PlayerController.cs" Line="57">The 'this' parameter (or 'Me' in Visual Basic) of 'PlayerController.ChangeCharacterClass()' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ChangeLocation(System.Windows.Forms.KeyEventArgs)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\New folder\CrazyRecycling\CrazyRecycling\Controllers\FacadeControllers" File="PlayerController.cs" Line="63">In externally visible method 'PlayerController.ChangeLocation(KeyEventArgs)', validate parameter 'e' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetPlayerStats()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="D:\New folder\CrazyRecycling\CrazyRecycling\Controllers\FacadeControllers" File="PlayerController.cs" Line="109">Change 'PlayerController.GetPlayerStats()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#oldLocation" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'PlayerController.oldLocation' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PickBottle()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="D:\New folder\CrazyRecycling\CrazyRecycling\Controllers\FacadeControllers" File="PlayerController.cs" Line="49">The 'this' parameter (or 'Me' in Visual Basic) of 'PlayerController.PickBottle()' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#player" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'PlayerController.player' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ThrowBottle(System.Windows.Forms.KeyEventArgs)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="e" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="D:\New folder\CrazyRecycling\CrazyRecycling\Controllers\FacadeControllers" File="PlayerController.cs" Line="44">Parameter 'e' of 'PlayerController.ThrowBottle(KeyEventArgs)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UseBottle()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="D:\New folder\CrazyRecycling\CrazyRecycling\Controllers\FacadeControllers" File="PlayerController.cs" Line="53">The 'this' parameter (or 'Me' in Visual Basic) of 'PlayerController.UseBottle()' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ServerConnector" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="TypesThatOwnDisposableFieldsShouldBeDisposable" Category="Microsoft.Design" CheckId="CA1001" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="DependsOnFix">
           <Issue Name="DependsOnFix" Certainty="95" Level="CriticalError">Implement IDisposable on 'ServerConnector' because it creates members of the following IDisposable types: 'HttpClient'. If 'ServerConnector' has previously shipped, adding new members that implement IDisposable to this type is considered a breaking change to existing consumers.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#DeleteAction(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error">Change the type of parameter 'requestUri' of method 'ServerConnector.DeleteAction(string)' from string to System.Uri, or provide an overload of 'ServerConnector.DeleteAction(string)', that allows 'requestUri' to be passed as a System.Uri object.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetAction(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error">Change the type of parameter 'requestUri' of method 'ServerConnector.GetAction(string)' from string to System.Uri, or provide an overload of 'ServerConnector.GetAction(string)', that allows 'requestUri' to be passed as a System.Uri object.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PatchAction(System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error">Change the type of parameter 'requestUri' of method 'ServerConnector.PatchAction(string, string)' from string to System.Uri, or provide an overload of 'ServerConnector.PatchAction(string, string)', that allows 'requestUri' to be passed as a System.Uri object.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PostAction(System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error">Change the type of parameter 'requestUri' of method 'ServerConnector.PostAction(string, string)' from string to System.Uri, or provide an overload of 'ServerConnector.PostAction(string, string)', that allows 'requestUri' to be passed as a System.Uri object.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PutAction(System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error">Change the type of parameter 'requestUri' of method 'ServerConnector.PutAction(string, string)' from string to System.Uri, or provide an overload of 'ServerConnector.PutAction(string, string)', that allows 'requestUri' to be passed as a System.Uri object.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="CrazyRecycling.Models">
       <Types>
        <Type Name="Brute" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#CrazyRecycling.Models.ICharacterClass.ThrowBottle(System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="D:\New folder\CrazyRecycling\CrazyRecycling\Models" File="Brute.cs" Line="37">In method 'Brute.ICharacterClass.ThrowBottle(int, int)', object 'bottlePic' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'bottlePic' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ColorData" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetColor(CrazyRecycling.Models.ICharacterClass)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="D:\New folder\CrazyRecycling\CrazyRecycling\Models" File="ColorData.cs" Line="13">The 'this' parameter (or 'Me' in Visual Basic) of 'ColorData.GetColor(ICharacterClass)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="b" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="D:\New folder\CrazyRecycling\CrazyRecycling\Models" File="ColorData.cs" Line="19">'ColorData.GetColor(ICharacterClass)' declares a variable, 'b', of type 'Brute', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="d" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="D:\New folder\CrazyRecycling\CrazyRecycling\Models" File="ColorData.cs" Line="21">'ColorData.GetColor(ICharacterClass)' declares a variable, 'd', of type 'DefaultClass', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="h" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="D:\New folder\CrazyRecycling\CrazyRecycling\Models" File="ColorData.cs" Line="14">'ColorData.GetColor(ICharacterClass)' declares a variable, 'h', of type 'Hoarder', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="s" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="D:\New folder\CrazyRecycling\CrazyRecycling\Models" File="ColorData.cs" Line="17">'ColorData.GetColor(ICharacterClass)' declares a variable, 's', of type 'Speedy', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DefaultClass" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#CrazyRecycling.Models.ICharacterClass.ThrowBottle(System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="D:\New folder\CrazyRecycling\CrazyRecycling\Models" File="DefaultClass.cs" Line="37">In method 'DefaultClass.ICharacterClass.ThrowBottle(int, int)', object 'bottlePic' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'bottlePic' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Hoarder" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#CrazyRecycling.Models.ICharacterClass.ThrowBottle(System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="D:\New folder\CrazyRecycling\CrazyRecycling\Models" File="Hoarder.cs" Line="37">In method 'Hoarder.ICharacterClass.ThrowBottle(int, int)', object 'bottlePic' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'bottlePic' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ICharacterClass" Kind="Interface" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetStats()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning">Change 'ICharacterClass.GetStats()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ThrowBottle(System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="X" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error">In member 'ICharacterClass.ThrowBottle(int, int)', correct the casing of 'X' in parameter name 'X' by changing it to 'x'.</Issue>
            </Message>
            <Message Id="Y" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error">In member 'ICharacterClass.ThrowBottle(int, int)', correct the casing of 'Y' in parameter name 'Y' by changing it to 'y'.</Issue>
            </Message>
            <Message Id="X" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning">In method 'ICharacterClass.ThrowBottle(int, int)', consider providing a more meaningful name than parameter name 'X'.</Issue>
            </Message>
            <Message Id="Y" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning">In method 'ICharacterClass.ThrowBottle(int, int)', consider providing a more meaningful name than parameter name 'Y'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Leaderboard" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Standings" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Leaderboard.Standings' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;Standing&gt;' in 'Leaderboard.Standings' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Machine" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Image" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Machine.Image' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PosY" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Machine.PosY' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="Pos" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Pos' in member name 'Machine.PosY' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PosX" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Machine.PosX' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="Pos" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Pos' in member name 'Machine.PosX' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SizeY" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Machine.SizeY' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SizeX" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Machine.SizeX' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="PlayerDefaultColor" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#_characterClass" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'PlayerDefaultColor._characterClass' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetColor()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="D:\New folder\CrazyRecycling\CrazyRecycling\Models" File="PlayerDefaultColor.cs" Line="20">Change 'PlayerDefaultColor.GetColor()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="PlayerStats" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Color" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'PlayerStats.Color' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Damage" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'PlayerStats.Damage' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#HealthPoints" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'PlayerStats.HealthPoints' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PointsBoost" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'PlayerStats.PointsBoost' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Speed" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'PlayerStats.Speed' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="RecyclingMachine" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.Int32,System.Int32,System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="D:\New folder\CrazyRecycling\CrazyRecycling\Models" File="RecyclingMachine.cs" Line="46">In method 'RecyclingMachine.RecyclingMachine(int, int, int, int)', object 'new PictureBox()' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'new PictureBox()' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="pos" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="D:\New folder\CrazyRecycling\CrazyRecycling\Models" File="RecyclingMachine.cs" Line="40">In method 'RecyclingMachine.RecyclingMachine(int, int, int, int)', correct the spelling of 'pos' in parameter name 'posX' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="D:\New folder\CrazyRecycling\CrazyRecycling\Models" File="RecyclingMachine.cs" Line="40">In method 'RecyclingMachine.RecyclingMachine(int, int, int, int)', correct the spelling of 'pos' in parameter name 'posY' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="D:\New folder\CrazyRecycling\CrazyRecycling\Models" File="RecyclingMachine.cs" Line="21">In method 'RecyclingMachine.RecyclingMachine(int, int, int, int, int)', object 'new PictureBox()' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'new PictureBox()' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="D:\New folder\CrazyRecycling\CrazyRecycling\Models" File="RecyclingMachine.cs" Line="31">In method 'RecyclingMachine.RecyclingMachine(int, int, int, int, int)', object 'new PictureBox()' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'new PictureBox()' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="IMG" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\New folder\CrazyRecycling\CrazyRecycling\Models" File="RecyclingMachine.cs" Line="13">In member 'RecyclingMachine.RecyclingMachine(int, int, int, int, int)', correct the casing of 'IMG' in parameter name 'RecyclingIMG' by changing it to 'Img'.</Issue>
            </Message>
            <Message Id="Recycling" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\New folder\CrazyRecycling\CrazyRecycling\Models" File="RecyclingMachine.cs" Line="13">In member 'RecyclingMachine.RecyclingMachine(int, int, int, int, int)', correct the casing of 'Recycling' in parameter name 'RecyclingIMG' by changing it to 'recycling'.</Issue>
            </Message>
            <Message Id="pos" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="D:\New folder\CrazyRecycling\CrazyRecycling\Models" File="RecyclingMachine.cs" Line="13">In method 'RecyclingMachine.RecyclingMachine(int, int, int, int, int)', correct the spelling of 'pos' in parameter name 'posX' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="D:\New folder\CrazyRecycling\CrazyRecycling\Models" File="RecyclingMachine.cs" Line="13">In method 'RecyclingMachine.RecyclingMachine(int, int, int, int, int)', correct the spelling of 'pos' in parameter name 'posY' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Shop" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.Int32,System.Int32,System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="D:\New folder\CrazyRecycling\CrazyRecycling\Models" File="Shop.cs" Line="20">In method 'Shop.Shop(int, int, int, int)', object 'new PictureBox()' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'new PictureBox()' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="pos" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="D:\New folder\CrazyRecycling\CrazyRecycling\Models" File="Shop.cs" Line="13">In method 'Shop.Shop(int, int, int, int)', correct the spelling of 'pos' in parameter name 'posX' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="D:\New folder\CrazyRecycling\CrazyRecycling\Models" File="Shop.cs" Line="13">In method 'Shop.Shop(int, int, int, int)', correct the spelling of 'pos' in parameter name 'posY' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="D:\New folder\CrazyRecycling\CrazyRecycling\Models" File="Shop.cs" Line="37">In method 'Shop.Shop(int, int, int, int, int)', object 'new PictureBox()' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'new PictureBox()' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="D:\New folder\CrazyRecycling\CrazyRecycling\Models" File="Shop.cs" Line="47">In method 'Shop.Shop(int, int, int, int, int)', object 'new PictureBox()' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'new PictureBox()' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="IMG" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\New folder\CrazyRecycling\CrazyRecycling\Models" File="Shop.cs" Line="29">In member 'Shop.Shop(int, int, int, int, int)', correct the casing of 'IMG' in parameter name 'shopIMG' by changing it to 'Img'.</Issue>
            </Message>
            <Message Id="pos" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="D:\New folder\CrazyRecycling\CrazyRecycling\Models" File="Shop.cs" Line="29">In method 'Shop.Shop(int, int, int, int, int)', correct the spelling of 'pos' in parameter name 'posX' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="D:\New folder\CrazyRecycling\CrazyRecycling\Models" File="Shop.cs" Line="29">In method 'Shop.Shop(int, int, int, int, int)', correct the spelling of 'pos' in parameter name 'posY' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Speedy" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#CrazyRecycling.Models.ICharacterClass.ThrowBottle(System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="D:\New folder\CrazyRecycling\CrazyRecycling\Models" File="Speedy.cs" Line="37">In method 'Speedy.ICharacterClass.ThrowBottle(int, int)', object 'bottlePic' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'bottlePic' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Standing" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#PlayerId" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Standing.PlayerId' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PlayerName" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Standing.PlayerName' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Points" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Standing.Points' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="CrazyRecycling.Models.Bottles">
       <Types>
        <Type Name="Bottle" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Box" Kind="Property" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#get_Box()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="D:\New folder\CrazyRecycling\CrazyRecycling\Models\Bottles" File="Bottle.cs" Line="17">'Bottle.Box.get()' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
            <Accessor Name="#set_Box(System.Drawing.Rectangle)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="D:\New folder\CrazyRecycling\CrazyRecycling\Models\Bottles" File="Bottle.cs" Line="17">'Bottle.Box.set(Rectangle)' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#GetBottleInfo()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning">Change 'Bottle.GetBottleInfo()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Cola" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Count" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Cola.Count' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetBottleInfo()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\New folder\CrazyRecycling\CrazyRecycling\Models\Bottles" File="Cola.cs" Line="15">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'Cola.GetBottleInfo()' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="GinOfDestruction" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Damage" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'GinOfDestruction.Damage' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetBottleInfo()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\New folder\CrazyRecycling\CrazyRecycling\Models\Bottles" File="GinOfDestruction.cs" Line="15">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'GinOfDestruction.GetBottleInfo()' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="NukeCola" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Count" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'NukeCola.Count' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetBottleInfo()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\New folder\CrazyRecycling\CrazyRecycling\Models\Bottles" File="NukeCola.cs" Line="15">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'NukeCola.GetBottleInfo()' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="PointBottleFactory" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CreateBottle(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="D:\New folder\CrazyRecycling\CrazyRecycling\Models\Bottles" File="PointBottleFactory.cs" Line="19">In method 'PointBottleFactory.CreateBottle(string)', object 'new PictureBox()' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'new PictureBox()' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="D:\New folder\CrazyRecycling\CrazyRecycling\Models\Bottles" File="PointBottleFactory.cs" Line="29">In method 'PointBottleFactory.CreateBottle(string)', object 'new PictureBox()' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'new PictureBox()' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SpecialBottleFactory" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CreateBottle(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="D:\New folder\CrazyRecycling\CrazyRecycling\Models\Bottles" File="SpecialBottleFactory.cs" Line="19">In method 'SpecialBottleFactory.CreateBottle(string)', object 'new PictureBox()' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'new PictureBox()' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="D:\New folder\CrazyRecycling\CrazyRecycling\Models\Bottles" File="SpecialBottleFactory.cs" Line="27">In method 'SpecialBottleFactory.CreateBottle(string)', object 'new PictureBox()' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'new PictureBox()' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="D:\New folder\CrazyRecycling\CrazyRecycling\Models\Bottles" File="SpecialBottleFactory.cs" Line="37">In method 'SpecialBottleFactory.CreateBottle(string)', object 'new PictureBox()' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'new PictureBox()' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="D:\New folder\CrazyRecycling\CrazyRecycling\Models\Bottles" File="SpecialBottleFactory.cs" Line="47">In method 'SpecialBottleFactory.CreateBottle(string)', object 'new PictureBox()' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'new PictureBox()' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Vodka" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Damage" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Vodka.Damage' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetBottleInfo()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\New folder\CrazyRecycling\CrazyRecycling\Models\Bottles" File="Vodka.cs" Line="15">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'Vodka.GetBottleInfo()' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Whiskey" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Damage" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Whiskey.Damage' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetBottleInfo()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\New folder\CrazyRecycling\CrazyRecycling\Models\Bottles" File="Whiskey.cs" Line="15">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'Whiskey.GetBottleInfo()' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Wine" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Damage" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Wine.Damage' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetBottleInfo()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\New folder\CrazyRecycling\CrazyRecycling\Models\Bottles" File="Wine.cs" Line="15">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'Wine.GetBottleInfo()' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="CrazyRecycling.Models.Props">
       <Types>
        <Type Name="MapPropBuilder" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#BuildLocation(System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="X" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error">In member 'MapPropBuilder.BuildLocation(int, int)', correct the casing of 'X' in parameter name 'X' by changing it to 'x'.</Issue>
            </Message>
            <Message Id="Y" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error">In member 'MapPropBuilder.BuildLocation(int, int)', correct the casing of 'Y' in parameter name 'Y' by changing it to 'y'.</Issue>
            </Message>
            <Message Id="X" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning">In method 'MapPropBuilder.BuildLocation(int, int)', consider providing a more meaningful name than parameter name 'X'.</Issue>
            </Message>
            <Message Id="Y" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning">In method 'MapPropBuilder.BuildLocation(int, int)', consider providing a more meaningful name than parameter name 'Y'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Prop" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="TypesThatOwnDisposableFieldsShouldBeDisposable" Category="Microsoft.Design" CheckId="CA1001" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="DependsOnFix">
           <Issue Name="DependsOnFix" Certainty="95" Level="CriticalError">Implement IDisposable on 'Prop' because it creates members of the following IDisposable types: 'PictureBox'. If 'Prop' has previously shipped, adding new members that implement IDisposable to this type is considered a breaking change to existing consumers.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="PropSpawner" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Spawner" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Spawner' in type name 'PropSpawner'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Construct(CrazyRecycling.Models.Props.MapPropBuilder)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-11-23 10:48:08Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\New folder\CrazyRecycling\CrazyRecycling\Models\Props" File="PropSpawner.cs" Line="14">In externally visible method 'PropSpawner.Construct(MapPropBuilder)', validate parameter 'builder' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="CrazyRecycling.Properties">
       <Types>
        <Type Name="Resources" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#.ctor()" Kind="Method" Static="False" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="ExcludedInSource" Created="2018-11-23 10:48:08Z" FixCategory="NonBreaking" LastSeen="0001-01-01 00:00:00Z" />
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
 </Targets>
 <Rules>
  <Rule TypeName="AbstractTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1012">
   <Name>Abstract types should not have constructors</Name>
   <Description>Public constructors for abstract types do not make sense because you cannot create instances of abstract types.</Description>
   <Resolution Name="Default">Change the accessibility of all public constructors in {0} to protected.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182126.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalWarning</MessageLevel>
   <File Name="designrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210">
   <Name>Assemblies should have valid strong names</Name>
   <Description>Either the assembly has no strong name, an invalid one, or the strong name is valid only because of the computer configuration. The assembly should not be deployed in this state. The most common causes of this are: 1) The assembly's contents were modified after it was signed. 2) The signing process failed. 3) The assembly was delay-signed. 4) A registry key existed that allowed the check to pass (where it would not have otherwise).</Description>
   <Resolution Name="NoStrongName">Sign {0} with a strong name key.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182127.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811">
   <Name>Avoid uncalled private code</Name>
   <Description>There is uncalled code that is not externally visible and is not a known runtime entry point. If this violation fires in error, please send a problem report to the Visual Studio Code Analysis team.</Description>
   <Resolution Name="Default">{0} appears to have no upstream public or protected callers.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182264.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823">
   <Name>Avoid unused private fields</Name>
   <Description>Private fields were detected that do not appear to be accessed within the assembly. If this violation fires in error, please send a problem report to the Visual Studio Code Analysis team.</Description>
   <Resolution Name="Default">It appears that field {0} is never used or is only ever assigned to. Use this field or remove it.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms245042.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="DisposableFieldsShouldBeDisposed" Category="Microsoft.Usage" CheckId="CA2213">
   <Name>Disposable fields should be disposed</Name>
   <Description>If a type that implements IDisposable owns fields that also implement IDisposable, the encapsulating type's Dispose() implementation should call Dispose() on each disposable field.</Description>
   <Resolution Name="Default">{0} contains field {1} that is of IDisposable type: {2}. Change the Dispose method on {0} to call Dispose or Close on this field.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182328.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000">
   <Name>Dispose objects before losing scope</Name>
   <Description>If a disposable object is not explicitly disposed before all references to it are out of scope, the object will be disposed at some indeterminate time when the garbage collector runs the finalizer of the object. Because an exceptional event might occur that will prevent the finalizer of the object from running, the object should be explicitly disposed instead.</Description>
   <Resolution Name="ExceptionEdge">In method {0}, object {1} is not disposed along all exception paths. Call System.IDisposable.Dispose on object {1} before all references to it are out of scope.</Resolution>
   <Resolution Name="NonExceptionEdge">In method {0}, call System.IDisposable.Dispose on object {1} before all references to it are out of scope.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182289.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303">
   <Name>Do not pass literals as localized parameters</Name>
   <Description>Literal strings that are embedded in source code are difficult to localize. Avoid passing literal strings as arguments in circumstances where a localized string is generally expected.</Description>
   <Resolution Name="KnownValue">Method {0} passes a literal string as parameter '{1}' of a call to {2}. Retrieve the following string(s) from a resource table instead: {3}.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182187.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051">
   <Name>Do not declare visible instance fields</Name>
   <Description>Instance fields that are visible outside of the type that declares them, limit your ability to change the implementation details for those data items. Use properties instead. They do not compromise usability or performance and they do provide flexibility in that they conceal the implementation details of the underlying data.</Description>
   <Resolution Name="Default">Because field {0} is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182141.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="designrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002">
   <Name>Do not expose generic lists</Name>
   <Description>Do not expose List&lt;T&gt; in object models. Use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt; instead. List&lt;T&gt; is meant to be used from implementation, not in object model API. List&lt;T&gt; is optimized for performance at the cost of long term versioning. For example, if you return List&lt;T&gt; to the client code, you will not ever be able to receive notifications when client code modifies the collection.</Description>
   <Resolution Name="Default">Change {0} in {1} to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182142.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709">
   <Name>Identifiers should be cased correctly</Name>
   <Description>Type, namespace, and member identifiers are Pascal-cased. Parameter identifiers are camel-cased. Two letter acronyms within these identifiers should be upper-cased, for example, use System.IO instead of System.Io. Acronyms of three or more letters should be Pascal-cased, for example, use System.Xml instead of System.XML. The pascal-casing convention capitalizes the first letter of each word, as in BackColor. The camel-casing convention formats the first letter of the first word in lowercase and capitalizes the first letter of all subsequent words, as in backgroundColor. Although it may be common practice for some two letter acronyms to not be fully capitalized, violations of this rule should not be excluded for this reason. For example, 'DbConnection', is common but incorrect; use DBConnection. A violation of this rule might be required for compatibility with existing, non-managed symbol schemes. In general, however, these symbols should not be visible outside the assembly that uses them.</Description>
   <Resolution Name="MemberParameter">In member {0}, correct the casing of '{1}' in parameter name {2} by changing it to '{3}'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182240.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="85">Error</MessageLevel>
   <File Name="namingrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704">
   <Name>Identifiers should be spelled correctly</Name>
   <Description>The individual words that make up an identifier should not be abbreviated and should be spelled correctly. If this rule generates a false positive on a term that should be recognized, add the word to the FxCop custom dictionary.</Description>
   <Resolution Name="Member">Correct the spelling of '{0}' in member name {1} or remove it entirely if it represents any sort of Hungarian notation.</Resolution>
   <Resolution Name="MemberParameter">In method {0}, correct the spelling of '{1}' in parameter name {2} or remove it entirely if it represents any sort of Hungarian notation.</Resolution>
   <Resolution Name="MemberParameterMoreMeaningfulName">In method {0}, consider providing a more meaningful name than parameter name {1}.</Resolution>
   <Resolution Name="Type">Correct the spelling of '{0}' in type name {1}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb264492.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">CriticalWarning</MessageLevel>
   <File Name="namingrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204">
   <Name>Literals should be spelled correctly</Name>
   <Description>This rule parses the literal string into words, tokenizing compound words, and checks the spelling of each word/token.</Description>
   <Resolution Name="Default">Correct the spelling of the unrecognized token '{0}' in the literal '{1}'.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/bb264488.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014">
   <Name>Mark assemblies with CLSCompliantAttribute</Name>
   <Description>Assemblies should explicitly state their CLS compliance using the CLSCompliant attribute. An assembly without this attribute is not CLS-compliant. Assemblies, modules, and types can be CLS-compliant even if some parts of the assembly, module, or type are not CLS-compliant. The following rules apply: 1) If the element is marked CLSCompliant, any noncompliant members must have the CLSCompliant attribute present with its argument set to false. 2) A comparable CLS-compliant alternative member must be supplied for each member that is not CLS-compliant.</Description>
   <Resolution Name="Default">Mark {0} with CLSCompliant(true) because it exposes externally visible types.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182156.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="MarkAssembliesWithNeutralResourcesLanguage" Category="Microsoft.Performance" CheckId="CA1824">
   <Name>Mark assemblies with NeutralResourcesLanguageAttribute</Name>
   <Description>The NeutralResourcesLanguage attribute informs the ResourceManager of the language used to render the neutral culture's resources for an assembly. When looking up resources in the same culture as the neutral resources language, the ResourceManager automatically uses the resources located in the main assembly, instead of searching for a satellite assembly with the current user interface culture for the current thread. This will improve lookup performance for the first resource you load and can reduce your working set.</Description>
   <Resolution Name="Default">Because assembly {0} contains a ResX-based resource file, mark it with the NeutralResourcesLanguage attribute, specifying the language of the resources within the assembly. This could improve lookup performance the first time a resource is retrieved.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb385967.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822">
   <Name>Mark members as static</Name>
   <Description>Methods which do not access instance data or call instance methods can be marked as static (Shared in Visual Basic). After doing so, the compiler will emit non-virtual call sites to these members which will prevent a check at runtime for each call that ensures the current object pointer is non-null. This can result in a measurable performance gain for performance-sensitive code. In some cases, the failure to access the current object instance represents a correctness issue.</Description>
   <Resolution Name="Default">The 'this' parameter (or 'Me' in Visual Basic) of {0} is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms245046.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211">
   <Name>Non-constant fields should not be visible</Name>
   <Description>Static fields should be constant unless you carefully manage access to the field using locks. Using static variables without making them thread safe can compromise execution state. This rule applies to managed code libraries. If the analyzed assembly is an application, it is usually safe to exclude violations of this rule.</Description>
   <Resolution Name="Default">Consider making {0} non-public or a constant.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182353.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804">
   <Name>Remove unused locals</Name>
   <Description>Remove locals that are not used or are only assigned to in method implementations.</Description>
   <Resolution Name="Default">{0} declares a variable, {1}, of type {2}, which is never used or is only assigned to. Use this variable or remove it.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182278.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801">
   <Name>Review unused parameters</Name>
   <Description>Review parameters in non-virtual methods that are not used in the method body to ensure no correctness exists around failure to access them. Unused parameters incur maintenance and performance costs. Sometimes a violation of this rule can point to an implementation bug in the method (i.e. the parameter should actually have been used in the method body). Exclude warnings of this rule if the parameter has to exist because of backward compatibility.</Description>
   <Resolution Name="Default">Parameter {0} of {1} is never used. Remove the parameter or use it in the method body.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182268.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305">
   <Name>Specify IFormatProvider</Name>
   <Description>If an overload exists that takes an IFormatProvider argument, it should always be called in favor of an overload that does not. Some methods in the runtime convert a value to or from a string representation and take a string parameter that contains one or more characters, called format specifiers, which indicate how the value is to be converted. If the meaning of the format specifier varies by culture, a formatting object supplies the actual characters used in the string representation. In scenarios where sorting and comparison behavior should never change between cultures, specify CultureInfo.InvariantCulture, otherwise, specify CultureInfo.CurrentCulture.</Description>
   <Resolution Name="IFormatProviderAlternateString">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be displayed to the user, specify {3} as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify {4}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182190.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="TypesThatOwnDisposableFieldsShouldBeDisposable" Category="Microsoft.Design" CheckId="CA1001">
   <Name>Types that own disposable fields should be disposable</Name>
   <Description>Types that declare disposable members should also implement IDisposable. If the type does not own any unmanaged resources, do not implement a finalizer on it.</Description>
   <Resolution Name="DependsOnFix">Implement IDisposable on {0} because it creates members of the following IDisposable types: {1}. If {0} has previously shipped, adding new members that implement IDisposable to this type is considered a breaking change to existing consumers.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182172.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054">
   <Name>URI parameters should not be strings</Name>
   <Description>If a parameter name contains "uri" or "url" or "urn", and it's typed as string, the parameter type should be changed to System.Uri, unless there is an overload method where the same parameter is typed as System.Uri.</Description>
   <Resolution Name="Default">Change the type of parameter {0} of method {1} from string to System.Uri, or provide an overload of {1}, that allows {0} to be passed as a System.Uri object.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182174.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="60">Error</MessageLevel>
   <File Name="designrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024">
   <Name>Use properties where appropriate</Name>
   <Description>Properties should be used instead of Get/Set methods in most situations. Methods are preferable to properties in the following situations: the operation is a conversion, is expensive or has an observable side-effect; the order of execution is important; calling the member twice in succession creates different results; a member is static but returns a mutable value; or the member returns an array.</Description>
   <Resolution Name="Default">Change {0} to a property if appropriate.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182181.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="designrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062">
   <Name>Validate arguments of public methods</Name>
   <Description>All reference arguments passed to externally visible methods should be checked against null (Nothing in VB). If appropriate, throw a System.ArgumentNullException when the argument is null.</Description>
   <Resolution Name="Default">In externally visible method {0}, validate parameter '{1}' before using it.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182182.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="15.0.0.0" />
  </Rule>
 </Rules>
 <Localized>
  <String Key="Category">Category</String>
  <String Key="Certainty">Certainty</String>
  <String Key="CollapseAll">Collapse All</String>
  <String Key="CheckId">Check Id</String>
  <String Key="Error">Error</String>
  <String Key="Errors">error(s)</String>
  <String Key="ExpandAll">Expand All</String>
  <String Key="Help">Help</String>
  <String Key="Line">Line</String>
  <String Key="Messages">message(s)</String>
  <String Key="LocationNotStoredInPdb">[Location not stored in Pdb]</String>
  <String Key="Project">Project</String>
  <String Key="Resolution">Resolution</String>
  <String Key="Rule">Rule</String>
  <String Key="RuleFile">Rule File</String>
  <String Key="RuleDescription">Rule Description</String>
  <String Key="Source">Source</String>
  <String Key="Status">Status</String>
  <String Key="Target">Target</String>
  <String Key="Warning">Warning</String>
  <String Key="Warnings">warning(s)</String>
  <String Key="ReportTitle">Code Analysis Report</String>
 </Localized>
</FxCopReport>
